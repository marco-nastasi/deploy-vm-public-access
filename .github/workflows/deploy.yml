name: AWS deployment workflow
on:
  workflow_dispatch:
    inputs:
      terraform_operation:
        description: "Terraform operation: plan, apply, destroy"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy
env:
  AWS_REGION : ${{ vars.AWS_REGION }}
  AWS_ROLE: ${{ secrets.AWS_OIDC_ROLE }}

  # permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  Terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_REGION }}
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -input=false
        if: "${{ github.event.inputs.terraform_operation == 'plan' }}"

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply --auto-approve
        if: "${{ github.event.inputs.terraform_operation == 'apply' }}"

      - name: Terraform Destroy
        run: |
          cd terraform
          terraform destroy --auto-approve
        if: "${{ github.event.inputs.terraform_operation == 'destroy' }}"
