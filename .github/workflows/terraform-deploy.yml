name: Deploy to AWS

permissions: {}

on:
  workflow_dispatch: # Trigger manually

jobs:
  check-plan-status:
    runs-on: ubuntu-latest
    steps:
      - name: Check Workflow A Status
        id: check-status
        uses: actions/github-script@d70566966bbb446d06887700f68d905602745985
        with:
          script: |
            const { data: runs } = await github.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "terraform-plan.yml", # Replace with Workflow A filename
              branch: "main",
              status: "success"
            });
            if (runs.workflow_runs.length === 0) {
              core.setFailed("No successful Terraform Plan run found.");
            } else {
              console.log("Last successful Terraform Plan run found:", runs.workflow_runs[0].html_url);
            }

  deploy:
    name: Deploy to AWS using Terraform
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@1bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@9cd54a3c349d3f38e8881555d616ced269862dd
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: Configure AWS OIDC credentials
        id: configure-aws
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TFSTATE_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.TFSTATE_BUCKET_PATH }}" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TFSTATE_TABLE_NAME }}"

      - name: Download plan from S3 bucket
        run: |
          aws s3 cp s3://${{ secrets.TFSTATE_BUCKET_NAME }}/plan/output.tfplan \
          output.tfplan

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve output.tfplan