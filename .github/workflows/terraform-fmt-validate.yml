name: Validate Terraform Format

permissions: {}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  TF_VERSION: "1.10.4"
  AWS_REGION: "eu-central-1"

jobs:
  validate:
    name: Validate Terraform code
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v4

      - name: Setup Terraform
        id: setup-terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Check Terraform Formatting
        id: fmt-check
        run: terraform fmt -check -recursive
    
      - name: Fail if Format Changes Are Needed
        if: ${{ failure() }}
        run: |
          echo "::error::Terraform formatting issues found. Please run 'terraform fmt' locally and commit the changes."
          exit 1

  scan:

    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so follow-up steps can access it
      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v4

      - name: Checkov GitHub Action
        id: security-scan-checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif
        
      - name: Upload SARIF file
        id: upload-security-scan-results
        uses: github/codeql-action/upload-sarif@v3
        
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif